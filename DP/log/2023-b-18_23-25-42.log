[2023-03-18 23:25:42] - Arguments: Namespace(beta=0.05, data_size=100, dataset_path='./data/adult.csv', delta=0.1, domain_path='./data/adult-domain.json', epsilon=100.0, iteration=500, sparse_ratio=10)
[2023-03-18 23:25:42] - ******** Initialization ********
[2023-03-18 23:25:42] - Data sparsification complete
[2023-03-18 23:25:42] - Data information: {'age': 85, 'workclass': 9, 'fnlwgt': 100, 'education-num': 16, 'marital-status': 7, 'occupation': 15, 'relationship': 6, 'race': 5, 'sex': 2, 'capital-gain': 100, 'capital-loss': 100, 'hours-per-week': 99, 'native-country': 42, 'income>50K': 2}
[2023-03-18 23:25:42] - ******** Create Dynamic Tree ********
[2023-03-18 23:25:45] - The dynamic interval tree consists of nodes: [
Node index: 1, height: 0, right_ancestor_index: 2, left_ancestor_index: None, right_child: None, left_child: None, 
 df: Empty DataFrame
Columns: [age, workclass, fnlwgt, education-num, marital-status, occupation, relationship, race, sex, capital-gain, capital-loss, hours-per-week, native-country, income>50K]
Index: []
, 
Node index: 2, height: 1, right_ancestor_index: 4, left_ancestor_index: None, right_child: 3, left_child: 1, 
 df: Empty DataFrame
Columns: [age, workclass, fnlwgt, education-num, marital-status, occupation, relationship, race, sex, capital-gain, capital-loss, hours-per-week, native-country, income>50K]
Index: []
, 
Node index: 3, height: 0, right_ancestor_index: None, left_ancestor_index: 2, right_child: None, left_child: None, 
 df:   age workclass fnlwgt education-num marital-status occupation relationship race sex capital-gain capital-loss hours-per-week native-country income>50K
0  11         0     13             8              2          2            1    0   1            0            0             39             20          0
, 
Node index: 4, height: 2, right_ancestor_index: 8, left_ancestor_index: None, right_child: 6, left_child: 2, 
 df:    age workclass fnlwgt education-num marital-status occupation relationship race sex capital-gain capital-loss hours-per-week native-country income>50K
0   11         0     13             8              2          2            1    0   1            0            0             39             20          0
1    9         0      1             9              0          4            0    3   0            0            0             39              0          0
2   27         3     26            15              2          5            3    0   0            0            0             49              0          1
3   24         0      7            10              0          1            2    1   1            0            0             39             41          1
4   27         0     15             9              0          0            2    0   1            0            0             39              0          1
5   13         4      7             9              2          6            3    0   1            0            0             49              0          0
6   21         0     12             9              0          3            2    0   1            0            0             47              0          1
7    4         0     17             9              2          3            1    4   1            0            0             43              0          0
8   29         0     25            12              1          4            1    0   1            0           28             39              0          0
9    7         4     12            11              2         12            3    0   1            0            0             51              0          0
10   8         0     10            12              0          0            2    0   1            0            0             49              0          0
11  22         0     13             8              1          6            3    0   1            0            0             39              0          0
12  32         1     17            11              0          5            2    0   1            0            0             39              0          0
, 
Node index: 5, height: 0, right_ancestor_index: 6, left_ancestor_index: None, right_child: None, left_child: None, 
 df: Empty DataFrame
Columns: [age, workclass, fnlwgt, education-num, marital-status, occupation, relationship, race, sex, capital-gain, capital-loss, hours-per-week, native-country, income>50K]
Index: []
]
[2023-03-18 23:25:45] - Infinite Private Partitioning: s0: 0, j: 5, T: 65536, beta: 2.883135391252616e-07, C: 1878.9903538693616, epsilon: 0.1, 
 segment: [0, 2, 4, 16, 256, 1199]
[2023-03-18 23:25:45] - ******** Testing Started ********
[2023-03-18 23:25:45] - At node with index 4, we implement queries on cliques dict_keys(['age']):
[2023-03-18 23:25:45] - Ground truth: gives answer: 
[ 0  1  0  5  7  0  0  0  0  7  0  0  7  7 12  0  0  7  0  0  5  8  7  0
  0  0  7 12  1 12  0  2 11  5  7  5  7  0  8  5  7  0  7  4  9 10  0  2
  0  0  1  2  0  1  0  0  6  0  8  0 13 13  4 13  7  0  4  5  7  0  0 11
  1  0  8  0 10  3  6 13  0  7 11  0 13  0  2  0  7  8  4  0  7  2 12  2
  7  4  4  2]
[2023-03-18 23:25:51] - Golden standard: data vector for original dataset is: 
[0. 0. 0. 0. 1. 0. 0. 1. 1. 1. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
 1. 0. 0. 2. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[2023-03-18 23:25:51] - Golden standard: data vector for approximate dataset is: 
[0. 0. 0. 0. 1. 0. 0. 1. 1. 1. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
 1. 0. 0. 2. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
[2023-03-18 23:25:51] - epsilon 100.0
[2023-03-18 23:25:51] - Golden standard: gives answer: 
[ 1  1  1  4  8  1  0  1  1  7  1  0  7  7 12  0  1  6  0  0  6  8  8  1
  1  0  7 12  1 12  0  2 12  7  7  6  8  0  7  6  7  0  7  5  9 11  0  2
  0  0  1  3  0  1  0  1  6  1  9  0 13 14  4 13  7  0  4  5  8  0  0 11
  2  1  8  1 10  2  7 13  1  7 11  0 13  1  3  1  7  7  5  0  7  2 12  2
  7  4  3  2]
[2023-03-18 23:25:57] - Mechanism: gives answer 
[ 2  1  2  4  8  2  0  2  2  6  0  0  5  6 11  0  2  7  0  2  4  7  8  2
  1  0  6 11  1 11  0  2 12  6  6  6  8  0  8  4  6  2  6  4  8 11  1  2
  0  0  1  4  2  1  0  2  4  0  9  0 13 14  4 12  6  0  4  4  8  1  0 10
  3  2  7  2 11  3  5 12  1  5 10  0 12  2  4  2  6  7  6  0  8  2 11  2
  6  4  4  2]
[2023-03-18 23:25:57] - The testing is implemented at age
[2023-03-18 23:25:57] - Ground truth: gives answer: 
[ 0  1  0  5  7  0  0  0  0  7  0  0  7  7 12  0  0  7  0  0  5  8  7  0
  0  0  7 12  1 12  0  2 11  5  7  5  7  0  8  5  7  0  7  4  9 10  0  2
  0  0  1  2  0  1  0  0  6  0  8  0 13 13  4 13  7  0  4  5  7  0  0 11
  1  0  8  0 10  3  6 13  0  7 11  0 13  0  2  0  7  8  4  0  7  2 12  2
  7  4  4  2]
[2023-03-18 23:25:57] - Golden standard: gives answer: 
[ 1  1  1  4  8  1  0  1  1  7  1  0  7  7 12  0  1  6  0  0  6  8  8  1
  1  0  7 12  1 12  0  2 12  7  7  6  8  0  7  6  7  0  7  5  9 11  0  2
  0  0  1  3  0  1  0  1  6  1  9  0 13 14  4 13  7  0  4  5  8  0  0 11
  2  1  8  1 10  2  7 13  1  7 11  0 13  1  3  1  7  7  5  0  7  2 12  2
  7  4  3  2]
[2023-03-18 23:25:57] - Mechanism: gives answer: 
[ 2  1  2  4  8  2  0  2  2  6  0  0  5  6 11  0  2  7  0  2  4  7  8  2
  1  0  6 11  1 11  0  2 12  6  6  6  8  0  8  4  6  2  6  4  8 11  1  2
  0  0  1  4  2  1  0  2  4  0  9  0 13 14  4 12  6  0  4  4  8  1  0 10
  3  2  7  2 11  3  5 12  1  5 10  0 12  2  4  2  6  7  6  0  8  2 11  2
  6  4  4  2]
[2023-03-18 23:25:57] - Mean Square Error of ground truth and golden standard: 0.43
[2023-03-18 23:25:57] - Mean Square Error of ground truth and mechanism: 1.31
[2023-03-18 23:25:57] - Mean Square Error of golden standard and mechanism: 0.86
[2023-03-18 23:25:57] - Measurement1: 0.11917796092796092
[2023-03-18 23:25:57] - Measurement2: 0.9473684210526315
[2023-03-18 23:25:57] - ******** Testing Finished ********
