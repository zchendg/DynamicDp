[2023-03-18 23:27:54] - Arguments: Namespace(beta=0.05, data_size=100, dataset_path='./data/adult.csv', delta=0.1, domain_path='./data/adult-domain.json', epsilon=1.0, iteration=500, sparse_ratio=10)
[2023-03-18 23:27:54] - ******** Initialization ********
[2023-03-18 23:27:55] - Data sparsification complete
[2023-03-18 23:27:55] - Data information: {'age': 85, 'workclass': 9, 'fnlwgt': 100, 'education-num': 16, 'marital-status': 7, 'occupation': 15, 'relationship': 6, 'race': 5, 'sex': 2, 'capital-gain': 100, 'capital-loss': 100, 'hours-per-week': 99, 'native-country': 42, 'income>50K': 2}
[2023-03-18 23:27:55] - ******** Create Dynamic Tree ********
[2023-03-18 23:27:57] - The dynamic interval tree consists of nodes: [
Node index: 1, height: 0, right_ancestor_index: 2, left_ancestor_index: None, right_child: None, left_child: None, 
 df: Empty DataFrame
Columns: [age, workclass, fnlwgt, education-num, marital-status, occupation, relationship, race, sex, capital-gain, capital-loss, hours-per-week, native-country, income>50K]
Index: []
, 
Node index: 2, height: 1, right_ancestor_index: 4, left_ancestor_index: None, right_child: 3, left_child: 1, 
 df: Empty DataFrame
Columns: [age, workclass, fnlwgt, education-num, marital-status, occupation, relationship, race, sex, capital-gain, capital-loss, hours-per-week, native-country, income>50K]
Index: []
, 
Node index: 3, height: 0, right_ancestor_index: None, left_ancestor_index: 2, right_child: None, left_child: None, 
 df:   age workclass fnlwgt education-num marital-status occupation relationship race sex capital-gain capital-loss hours-per-week native-country income>50K
0  15         0      2            13              2          5            3    0   0           14            0             49              0          1
1  31         2      6             8              1          4            3    0   1            0            0             59              0          0
, 
Node index: 4, height: 2, right_ancestor_index: 8, left_ancestor_index: None, right_child: 6, left_child: 2, 
 df:    age workclass fnlwgt education-num marital-status occupation relationship race sex capital-gain capital-loss hours-per-week native-country income>50K
0   15         0      2            13              2          5            3    0   0           14            0             49              0          1
1   13         0      6             9              1          0            3    0   1            0            0             57              0          0
2   16         0     13            11              2          3            3    4   1            0            0             49              0          0
3   16         0     11             8              2          7            5    0   1            0            0             39              0          0
4   63         0      7             9              0          5            4    0   1            0            0             19              0          0
5   27         0     15             9              0          0            2    0   1            0            0             39              0          1
6   51         8     13             5              0         14            2    0   1            0            0              1              0          0
7   33         2     12             9              0          4            2    0   1            0            0             49              0          1
8    8         0     10            12              0          0            2    0   1            0            0             49              0          0
9   19         0      3            10              0          2            2    0   1            0            0             39              3          0
10  31         0      2            14              0          5            0    0   0            0           38             59             14          1
11  24         0      7            10              0          1            2    1   1            0            0             39             41          1
12   2         0     20             6              2          2            1    0   0            0            0             21              0          0
13  25         0      9             8              0          8            2    0   1            0            0             47              0          0
14  22         0      1             6              0          3            2    0   1            0            0             49              0          0
15  30         0      2             8              0          2            0    0   0            0            0             39              0          0
16  27         0      7             6              0         10            2    0   1            0           40             39              0          0
17  15         0      4             9              0          3            2    0   1            0            0             37             41          1
, 
Node index: 5, height: 0, right_ancestor_index: 6, left_ancestor_index: None, right_child: None, left_child: None, 
 df: Empty DataFrame
Columns: [age, workclass, fnlwgt, education-num, marital-status, occupation, relationship, race, sex, capital-gain, capital-loss, hours-per-week, native-country, income>50K]
Index: []
]
[2023-03-18 23:27:57] - Infinite Private Partitioning: s0: 0, j: 5, T: 65536, beta: 2.883135391252616e-07, C: 1878.9903538693616, epsilon: 0.1, 
 segment: [0, 2, 4, 16, 256, 1199]
[2023-03-18 23:27:57] - ******** Testing Started ********
[2023-03-18 23:27:57] - At node with index 4, we implement queries on cliques dict_keys(['age']):
[2023-03-18 23:27:57] - Ground truth: gives answer: 
[108 118   2  70  56 108  82   2   0   0 104   8  90  54  30 194 126   4
  36 192  68  78   4  70   0  28 116   0  32   4   2  70 128  96 154 106
   2   0   0   2  38   2   2   2   2   2  10  18 172   0 148  12   4  14
   4 180   0   0 108   0   8   2   2 138   0 146  66 164  36   4 114 192
 112 120   4  60 110   2   0   6  14 200 128   0   0 108  80  54  52  10
 108  12 164 126 148  64  58   0   2  70]
[2023-03-18 23:28:03] - Golden standard: data vector for original dataset is: 
[ 0.  0.  6.  6.  2.  2.  2.  6.  2.  8.  0.  2.  6.  8. 12. 10.  8.  2.
  4.  4.  2.  8.  4.  4.  6.  4.  4.  8.  4.  2.  4.  4. 10. 10.  4.  0.
  4. 10.  4.  0.  2.  4.  0.  4.  0.  0.  0.  0.  0.  0.  0.  2.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  2.  0.  0.  0.  0.  0.  0.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
[2023-03-18 23:28:03] - Golden standard: data vector for approximate dataset is: 
[ 2.  0.  8.  5.  0.  2.  0.  6.  0.  9.  0.  0.  4.  8. 13. 11.  7.  2.
  3.  0.  0.  7.  2.  4.  7.  4.  4.  7.  5.  3.  2.  2.  9. 14.  3.  0.
  3.  7.  4.  0.  0.  1.  0.  6.  0.  0.  0.  0.  0.  0.  0.  1.  1.  0.
  1.  0.  1.  0.  1.  2.  0.  3.  3.  2.  0.  0.  0.  1.  0.  4.  0.  0.
  0.  0.  0.  0.  0.  0.  0.  2.  0.  0.  1.  0.  0.]
[2023-03-18 23:28:03] - epsilon 1.0
[2023-03-18 23:28:03] - Golden standard: gives answer: 
[115 105   4  82  66 115  77   3   0   6  95  26  88  51  26 184 115  20
  37 171  67  89  20  58   0  23 109   0  43  21  13  63 131 105 143  95
   2   0   4   9  33   3  18  12   2  16   7  33 156   0 139  13  20  11
  20 162   0   1  95   0  27   8   6 128   0 135  77 167  41  21 115 172
 102 124  20  72 100   2   3  10  15 197 126   0   1 111  78  54  46   8
 119  11 153 114 136  70  56   0   9  82]
[2023-03-18 23:28:09] - Mechanism: gives answer 
[ 638  463  122  608  475  638  212   99    0  201  262  409  383  254
  261  907  527  325   85  741  137  637  379  205   50  169  587    0
  453  408  176  156  741  573  425  287   81    0   57  217  117  127
  222  183  121  286  110  598  530    0  585  299  303  129  395  613
    0  158  385    0  526  180  190  370    0  389  494  888  397  408
  630  754  443  700  343  545  381  114   64  220   52 1119  665    0
   36  598  390  343  136   30  695  266  693  508  495  489  356    0
  217  539]
[2023-03-18 23:28:09] - The testing is implemented at age
[2023-03-18 23:28:09] - Ground truth: gives answer: 
[108 118   2  70  56 108  82   2   0   0 104   8  90  54  30 194 126   4
  36 192  68  78   4  70   0  28 116   0  32   4   2  70 128  96 154 106
   2   0   0   2  38   2   2   2   2   2  10  18 172   0 148  12   4  14
   4 180   0   0 108   0   8   2   2 138   0 146  66 164  36   4 114 192
 112 120   4  60 110   2   0   6  14 200 128   0   0 108  80  54  52  10
 108  12 164 126 148  64  58   0   2  70]
[2023-03-18 23:28:09] - Golden standard: gives answer: 
[115 105   4  82  66 115  77   3   0   6  95  26  88  51  26 184 115  20
  37 171  67  89  20  58   0  23 109   0  43  21  13  63 131 105 143  95
   2   0   4   9  33   3  18  12   2  16   7  33 156   0 139  13  20  11
  20 162   0   1  95   0  27   8   6 128   0 135  77 167  41  21 115 172
 102 124  20  72 100   2   3  10  15 197 126   0   1 111  78  54  46   8
 119  11 153 114 136  70  56   0   9  82]
[2023-03-18 23:28:09] - Mechanism: gives answer: 
[ 638  463  122  608  475  638  212   99    0  201  262  409  383  254
  261  907  527  325   85  741  137  637  379  205   50  169  587    0
  453  408  176  156  741  573  425  287   81    0   57  217  117  127
  222  183  121  286  110  598  530    0  585  299  303  129  395  613
    0  158  385    0  526  180  190  370    0  389  494  888  397  408
  630  754  443  700  343  545  381  114   64  220   52 1119  665    0
   36  598  390  343  136   30  695  266  693  508  495  489  356    0
  217  539]
[2023-03-18 23:28:09] - Mean Square Error of ground truth and golden standard: 86.2
[2023-03-18 23:28:09] - Mean Square Error of ground truth and mechanism: 120389.48
[2023-03-18 23:28:09] - Mean Square Error of golden standard and mechanism: 119529.3
[2023-03-18 23:28:09] - Measurement1: 0.2356822837054272
[2023-03-18 23:28:09] - Measurement2: 0.984506567867969
[2023-03-18 23:28:09] - ******** Testing Finished ********
